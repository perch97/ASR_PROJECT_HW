train:
  get_spectrogram: # special key for getting spectrogram
    _target_: torchaudio.transforms.MelSpectrogram
    sample_rate: 16000
  audio: # name of the tensor on which we apply transform
    _target_: src.transforms.RandomApply
    p: 0.8
    augmentation:
      _target_: torchvision.transforms.v2.RandomChoice
      transforms:
        - _target_: src.transforms.wav_augs.BandPassFilter
          p: 1.0
          min_bandwidth_fraction: 1.5
          min_center_frequency: 2000
          max_center_frequency: 2001
          sample_rate: ${datasets.train.target_sr}
        - _target_: src.transforms.wav_augs.BandStopFilter
          p: 1.0
          max_bandwidth_fraction: 1.5
          min_center_frequency: 2000
          max_center_frequency: 2001
          sample_rate: ${datasets.train.target_sr}
inference:
  get_spectrogram:
    _target_: torchaudio.transforms.MelSpectrogram
    sample_rate: 16000
